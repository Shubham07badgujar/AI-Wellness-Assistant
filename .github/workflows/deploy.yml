name: CI/CD - AI Wellness Assistant

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test application imports
      run: |
        python -c "
        try:
            from web_server import app
            print('✅ Web server imports successfully')
        except ImportError as e:
            print(f'❌ Import error: {e}')
            exit(1)
        "
        
    - name: Test core modules
      run: |
        python -c "
        try:
            from wellness_assistant.core.tracker import HabitTracker
            from wellness_assistant.core.advice import WellnessAdvisor
            from wellness_assistant.core.symptoms import SymptomDetector
            print('✅ Core modules import successfully')
        except ImportError as e:
            print(f'❌ Core module import error: {e}')
            exit(1)
        "
        
    - name: Check code quality (optional)
      run: |
        pip install black flake8 || true
        echo "🔍 Running code quality checks..."
        black --check . || echo "⚠️ Code formatting could be improved with: black ."
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "⚠️ Some code quality issues found"

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        echo "🐳 Building Docker image..."
        docker build -t ai-wellness-assistant .
        echo "✅ Docker image built successfully"
        
    - name: Test Docker container
      run: |
        echo "🧪 Testing Docker container..."
        # Start container in background
        docker run -d -p 5000:5000 --name test-container ai-wellness-assistant
        
        # Wait for container to start
        echo "⏳ Waiting for container to start..."
        sleep 15
        
        # Test health endpoint
        echo "🔍 Testing health endpoint..."
        curl -f http://localhost:5000/health || {
          echo "❌ Health check failed, checking container logs:"
          docker logs test-container
          exit 1
        }
        
        echo "✅ Docker container health check passed"
        
        # Cleanup
        docker stop test-container
        docker rm test-container

  deploy-heroku:
    runs-on: ubuntu-latest
    needs: [test, build-docker]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && secrets.HEROKU_API_KEY != ''
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        
    - name: Verify Heroku deployment
      if: success()
      run: |
        echo "⏳ Waiting for Heroku deployment to be ready..."
        sleep 45
        
        echo "🔍 Testing Heroku deployment..."
        curl -f https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/health || {
          echo "❌ Heroku health check failed"
          exit 1
        }
        
        echo "✅ Heroku deployment verified successfully"
        echo "🌐 Your app is live at: https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com"

  deployment-summary:
    runs-on: ubuntu-latest
    needs: [test, build-docker]
    if: always()
    
    steps:
    - name: Deployment Summary
      run: |
        echo "📊 Deployment Summary"
        echo "===================="
        echo "✅ Tests: ${{ needs.test.result }}"
        echo "✅ Docker Build: ${{ needs.build-docker.result }}"
        echo ""
        if [ "${{ secrets.HEROKU_API_KEY }}" = "" ]; then
          echo "ℹ️  Heroku deployment skipped (no API key configured)"
          echo "📝 To enable Heroku deployment, add these secrets to your repository:"
          echo "   - HEROKU_API_KEY"
          echo "   - HEROKU_APP_NAME"
          echo "   - HEROKU_EMAIL"
        else
          echo "🚀 Heroku deployment: ${{ needs.deploy-heroku.result || 'completed' }}"
        fi
        echo ""
        echo "🎉 Your AI Wellness Assistant is ready for deployment!"
